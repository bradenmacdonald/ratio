/* Grid system, originally based on the Blaze CSS grid, http://blazecss.com/objects/grid/ (MIT-licensed) */

$grid-padding: 1em !default;
$grid-widths: (
    5: 5/100,
    10: 1/10,
    15: 15/100,
    20: 1/5,
    25: 1/4,
    30: 3/10,
    33: 1/3,
    35: 35/100,
    40: 2/5,
    45: 45/100,
    50: 1/2,
    55: 55/100,
    60: 3/5,
    65: 65/100,
    66: 2/3,
    70: 7/10,
    75: 3/4,
    80: 4/5,
    85: 85/100,
    90: 9/10,
    95: 95/100,
    100: 1
);

.grid {
    display: flex;
    flex-wrap: wrap;

    // Instead of equal heights, the grid can use other alignments:
    &.top { align-items: flex-start; }
    &.center { align-items: center; }
    &.bottom { align-items: flex-end; }

    &.no-padding {
      > .cell {
          padding-left: 0;
          padding-right: 0;
      }
    }

    .cell {
        padding-left: $grid-padding;
        padding-right: $grid-padding;

        // Default width: full-width on xsmall screens, automatic sizing on all larger screens:
        flex: 0 0 100%;
        max-width: 100%;
        margin-left: 0;
        @include media-breakpoint-up(sm) {
            flex: 1;
        }

        // Define the various possible cell sizes and responsiveness:
        @each $breakpoint, $unused in $grid-breakpoints {
            @include media-breakpoint-up($breakpoint) {
                @each $width, $fraction in $grid-widths {
                    &.#{$breakpoint}-#{$width} {
                        $cell-width: $fraction * 100%;
                        flex: 0 0 $cell-width;
                        max-width: $cell-width;
                    }
                    &.#{$breakpoint}-offset-#{$width} {
                        margin-left: $fraction * 100%;
                    }
                }
            }
        }

        &.top { align-self: flex-start; }
        &.center { align-self: center; }
        &.bottom { align-self: flex-end; }

        &.no-padding {
            padding-left: 0;
            padding-right: 0;
        }

        &.fixed-width {
            flex: 0 1 auto;
        }

        &.hidden {
            display: none;
        }

        &.visible {
            display: initial;
        }
    }
}

@each $breakpoint, $unused in $grid-breakpoints {
    table.gridify-table-below-#{$breakpoint} {
        @include media-breakpoint-down($breakpoint) {
            display: block;

            tbody, thead, tfoot {
                display: block;
            }
            tr {
                display: flex;
                flex-wrap: wrap;

                td {
                    display: block;

                    padding-right: $grid-padding;

                    flex: 0 0 100%;
                    max-width: 100%;
                    margin-left: 0;
                }
            }
        }
    }
}
